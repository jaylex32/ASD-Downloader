<Window x:Class="new_ASD_Downloader.ASD_WebServer"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:new_ASD_Downloader"
        mc:Ignorable="d"
            Title="ASD WebServer" Height="731" Width="1300" ResizeMode="CanResize">
    <Window.Resources>
        <Style x:Key="MyViewLogButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#FF1D1D1D"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF3E3E3E"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF606060"/>
                            </Trigger>
                            <!-- Add the DataTrigger here -->
                            <DataTrigger Binding="{Binding DownloadStatus.Status}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="RadioButton">
            <Setter Property="Background" Value="#FF1D1D1D"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5,0,10,5"/>
            <Setter Property="Width" Value="85"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="5">
                            <Grid>
                                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF3E3E3E"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF606060"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Content" Value="{Binding RelativeSource={RelativeSource Self}, Path=Content}" />
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="Background" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonLikeCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Background" Value="#FF1D1D1D"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5,0,10,5"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF3E3E3E"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF606060"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="Black">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!-- Header -->
        <GroupBox Header="Controls" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White">
            <StackPanel Grid.Row="2" Orientation="Horizontal" Background="Black">
                <StackPanel.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="#FF1D1D1D"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontFamily" Value="Segoe UI"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Padding" Value="10,5"/>
                        <Setter Property="Margin" Value="5,0,10,5"/>
                        <Setter Property="Width" Value="85"/>
                        <Setter Property="Height" Value="35"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="5">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="#FF3E3E3E"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="#FF606060"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </StackPanel.Resources>
                <Button x:Name="btnStart" Content="Start Server"/>
                <Button x:Name="btnStop" Content="Stop Server" IsEnabled="False"/>
                <Button x:Name="btnClear" Content="Clear" IsEnabled="False" Width="55" Click="btnClear_Click"/>
                <CheckBox x:Name="createfolder" Content="Create Folder" Style="{StaticResource ButtonLikeCheckBoxStyle}"/>
                <!--<Button x:Name="btnRename" Content="Rename" Width="75"/>-->
                <Button x:Name="btnDownload" Content="Download" Click="DownloadButton_Click"/>
                <Button x:Name="btnOpenLocation" Content="Path" Width="55" Click="btnOpenLocation_Click"/>
            </StackPanel>
        </GroupBox>
        <!-- DataGrid with striped row colors -->
        <DataGrid Grid.Row="1" x:Name="dataGrid" ItemsSource="{Binding CombinedVideoItems}" SelectionMode="Extended" Margin="10" AutoGenerateColumns="False" IsReadOnly="False" CellEditEnding="dataGrid_CellEditEnding" CanUserAddRows="False">
            <DataGrid.Resources>
                <!-- Modify DataGridCell Selected Background and Foreground -->
                <SolidColorBrush x:Key="DataGridCellSelectedBackgroundBrush" Color="#FF444444" />
                <SolidColorBrush x:Key="DataGridCellSelectedForegroundBrush" Color="White" />
            </DataGrid.Resources>
            <!-- Row Style -->
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="White" />
                    <Style.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="#202020" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <!-- Columns -->
            <DataGrid.Columns>
                <!-- Title Column -->
                <DataGridTextColumn Header="Title" Binding="{Binding VideoDetails.Title}" IsReadOnly="False" MinWidth="50"/>
                <!-- Display URL Column -->
                <DataGridTextColumn Header="URL" Binding="{Binding VideoDetails.DisplayURL}" MinWidth="50" IsReadOnly="True"/>
                <!-- Download URL Column -->
                <!--<DataGridTextColumn Header="Download URL" Binding="{Binding VideoDetails.DownloadURL}" />-->
                <!-- Filename Column -->
                <!--<DataGridTextColumn Header="Filename" Binding="{Binding DownloadStatus.Filename}" />-->
                <!-- Percentage Downloaded Column -->
                <DataGridTextColumn Header="Percentage" Binding="{Binding DownloadStatus.PercentageDownloaded}" MinWidth="50" IsReadOnly="True"/>
                <!-- Total Size Column -->
                <DataGridTextColumn Header="Total Size" Binding="{Binding DownloadStatus.TotalSize}" MinWidth="50" IsReadOnly="True"/>
                <!-- Download Speed Column -->
                <DataGridTextColumn Header="Download Speed" Binding="{Binding DownloadStatus.DownloadSpeed}" MinWidth="50" MaxWidth="105" IsReadOnly="True"/>
                <!-- Status Column -->
                <DataGridTextColumn Header="Status" Binding="{Binding DownloadStatus.Status}" MinWidth="50" IsReadOnly="True"/>
                <!-- Current Fragment Column -->
                <DataGridTextColumn Header="Current Fragment" Binding="{Binding DownloadStatus.CurrentFragment}" IsReadOnly="True"/>
                <!-- Total Fragments Column -->
                <DataGridTextColumn Header="Total Fragments" Binding="{Binding DownloadStatus.TotalFragments}" IsReadOnly="True"/>                
                <!-- Start Time Column -->
                <DataGridTextColumn Header="Start" Binding="{Binding DownloadStatus.StartTime, StringFormat='{}{0:MM/dd/yyyy hh:mm:ss tt}', TargetNullValue=''}" MinWidth="50" IsReadOnly="True"/>
                <!-- End Time Column -->
                <DataGridTextColumn Header="End" Binding="{Binding DownloadStatus.EndTime}" MinWidth="50" IsReadOnly="True"/>
                <DataGridTemplateColumn Header="View Log">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="View Log" Click="ViewLogButton_Click" Style="{StaticResource MyViewLogButtonStyle}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>
            <!-- Modify DataGridCell Control Template -->
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="DataGridCell">
                                <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="SelectionStates">
                                            <VisualState x:Name="Unselected" />
                                            <VisualState x:Name="Selected">
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetName="BackgroundRectangle"
                                                                    Storyboard.TargetProperty="Fill.Color"
                                                                    To="#FF444444" />
                                                    <ColorAnimation Storyboard.TargetName="ContentPresenter"
                                                                    Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                    To="White" />
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle x:Name="BackgroundRectangle" Fill="{TemplateBinding Background}" />
                                    <ContentPresenter x:Name="ContentPresenter"
                                    VerticalAlignment="Center"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    Content="{TemplateBinding Content}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    TextElement.Foreground="{TemplateBinding Foreground}" />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.CellStyle>
        </DataGrid>
        <GroupBox Grid.Row="3" Header="Category" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" Margin="0,0,0,20">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,5,0,0">
                <RadioButton x:Name="StreamsRadioButton" Content="Streams" GroupName="CategoryGroup" IsChecked="True"/>
                <RadioButton x:Name="MoviesRadioButton" Content="Movies" GroupName="CategoryGroup"/>
                <RadioButton x:Name="TvSeriesRadioButton" Content="TV Series" GroupName="CategoryGroup"/>
            </StackPanel>
        </GroupBox>
    </Grid>
</Window>
